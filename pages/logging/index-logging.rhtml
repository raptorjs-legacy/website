<c:template
    xmlns:c="core"
    xmlns:html="html"
    xmlns:optimizer="optimizer"
    xmlns:w="widgets"
    xmlns:docs="docs"
    params="includes,samples"
    docs:functions="url">

    <optimizer:page name="${data.pageName}" base-path="${data.pageOutputDir}">
        <dependencies>
            <module name="docs-global"/>
            <module name="components/nav/TopNavDefault"/>
            <module name="components/docs/Docs"/>
            <module name="components/icons/Icon"/>
            <css path="index.css"/>
        </dependencies>
    </optimizer:page>

    
    <html html:doctype="html">
        <docs:head title="RaptorJS: Logging">
        </docs:head>
        <body>
            <docs:top-nav activeItem="logging"/>
            
            
            <div class="container">
                <docs:docs heading="Logging" disqus-id="logging">
                        
                    <docs:section heading="Overview">
                        <p>
                            RaptorJS includes support for a basic logging
                            system that is configurable. The RaptorJS logging system supports 
                            filtering log messages based on a log level and the log level
                            can be configured based on logger prefixes.
                            By default, all logs are sent to the JavaScript <code>console</code> to be displayed.
                        </p>
                    </docs:section>

                    <docs:section heading="The raptor/logging Module">
                        <p>
                            The RaptorJS logging system is implemented by the <a href="http://raptorjs.org/api/raptor/logging/">raptor/logging</a> module
                            provides the implementation for the RaptorJS logging system. The source code for the 
                            <a href="http://raptorjs.org/api/raptor/logging/">raptor/logging</a> module
                            can be found on Github at the following location:
                            <a href="https://github.com/raptorjs/raptorjs/tree/master/lib/raptor/logging"><nobr>https://github.com/raptorjs/raptorjs/tree/master/lib/raptor/logging</nobr></a>
                        </p>
                    </docs:section>
                    
                    <docs:section heading="Usage">
                        <p>
                            The following code illustrates how to use the <a href="http://raptorjs.org/api/raptor/logging/">raptor/logging</a> module:
                        </p>
                        <docs:code-editor 
                            mode="javascript"
                            readOnly="true" 
                            c:parse-body-text="false">
                        <![CDATA[
                        var logging = require('raptor/logging'),
                            logger = logging.logger('my-app/my-module');
                        
                        logger.debug('My debug message');
                        logger.info('My info message');
                        logger.warn('My warning message');
                        logger.error('My error message');
                        logger.error('There was an error: ' + e, e);
                        ]]>
                        </docs:code-editor>
                        <p>
                            The log out will vary based on how the logging system is configured, but
                            it will be similar to the following:
                        </p>
                        <pre class="sh" xml:space="preserve" c:trim-body-indent="true">
                        <![CDATA[
                        DEBUG my-app/my-module: My debug message
                        INFO my-app/my-module: My info message
                        WARN my-app/my-module: My warning message
                        ERROR my-app/my-module: My error message
                        ]]>
                        </pre>
                    </docs:section>

                    <docs:section heading="Configuring the Logging System">
                        <p>
                            The RaptorJS logging system allows logging to be configured
                            based on logger prefixes as shown in the following sample code:
                        </p>
                        <docs:code-editor 
                            mode="javascript"
                            readOnly="true" 
                            c:parse-body-text="false">
                        <![CDATA[
                        require('raptor/logging').configure({
                            loggers: {
                                'ROOT': {level: 'WARN'},
                                'my-app': {level: 'INFO'},
                                'my-app/my-module': {level: 'DEBUG'}
                            }
                        });
                        ]]>
                        </docs:code-editor>
                    </docs:section>

                    <docs:section heading="Error Stack Traces">
                        <p>
                            The RaptorJS loggers also support logging <code>Error</code> objects
                            with stack traces as shown in the following sample code:
                        </p>
                        <docs:code-editor 
                            mode="javascript"
                            readOnly="true" 
                            c:parse-body-text="false">
                        <![CDATA[
                        logger.error('Error in foo: ' + e, e);
                        logger.error(e);
                        ]]>
                        </docs:code-editor>
                        <p>
                            The output will be similar to the following:
                        </p>
                        <pre class="sh" xml:space="preserve" c:trim-body-indent="true">
                        <![CDATA[
                        ERROR my-app/my-module: Error in foo: ReferenceError: missingVariable is not defined

                        Stack trace:
                        ReferenceError: missingVariable is not defined
                            at Object.<anonymous> (scratch.js:8:9)
                            at Module._compile (module.js:449:26)
                            at Object.Module._extensions..js (module.js:467:10)
                            at Module.load (module.js:356:32)
                            at Function.Module._load (module.js:312:12)
                            at Module.runMain (module.js:492:10)
                            at process.startup.processNextTick.process._tickCallback (node.js:244:9)
                        ]]>
                        </pre>
                        <p>
                            In addition, RaptorJS supports for keeping tracking of the "cause"
                            as errors are thrown. This can be using the following code:
                        </p>
                        <docs:code-editor 
                            mode="javascript"
                            readOnly="true" 
                            c:parse-body-text="false">
                        <![CDATA[
                        throw raptor.createError(new Error("Error in foo: " + e1), e1);
                        ]]>
                        </docs:code-editor>
                        <p>
                            When errors with causes are logged using the <code>logger.error(...)</code> message
                            the output will be similar to the following:
                        </p>
                        <pre class="sh" xml:space="preserve" c:trim-body-indent="true">
                        <![CDATA[
                        ERROR my-app/my-module: Error in bar: Error: Error in foo: ReferenceError: missingVariable is not defined

                        Stack trace:
                        Error: Error in foo: ReferenceError: missingVariable is not defined
                            at Object.<anonymous> (scratch.js:13:34)
                            at Module._compile (module.js:449:26)
                            at Object.Module._extensions..js (module.js:467:10)
                            at Module.load (module.js:356:32)
                            at Function.Module._load (module.js:312:12)
                            at Module.runMain (module.js:492:10)
                            at process.startup.processNextTick.process._tickCallback (node.js:244:9)

                        Caused by:
                        ReferenceError: missingVariable is not defined
                            at Object.<anonymous> (scratch.js:8:9)
                            at Module._compile (module.js:449:26)
                            at Object.Module._extensions..js (module.js:467:10)
                            at Module.load (module.js:356:32)
                            at Function.Module._load (module.js:312:12)
                            at Module.runMain (module.js:492:10)
                            at process.startup.processNextTick.process._tickCallback (node.js:244:9)
                        ]]>
                        </pre>

                    </docs:section>
                    
                </docs:docs>
            </div>
            
            <optimizer:slot name="body"/>
            
            <w:init-widgets/>
        </body>
    </html>
</c:template>

