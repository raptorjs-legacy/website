<c:template
    xmlns:c="core"
    xmlns:html="html"
    xmlns:optimizer="optimizer"
    xmlns:w="widgets"
    xmlns:docs="docs"
    docs:functions="url">
    <p>
        Raptor Templates is a JavaScript-based templating language
        that beautifully blends powerful templating directives 
        with HTML markup. The cornerstone of Raptor Templates is its
        extensibilityâ€”allowing custom tag handlers, compilers and
        helper functions. Raptor Templates elegantly combines
        UI layout with traditional templating.
        Equally effective in both the browser
        and on the server, use Raptor Templates <i>wherever</i> you want to produce
        HTML.
    </p>
    <p>
        All Raptor templates are required to be well-formed XML. This
        constraint allows the template language to use the structure of the
        XML document to its advantage. For example, a template directive
        that controls structural logic can be applied as an attribute of the
        element that it controls. In addition, unlike in non-XML-based
        templating languages, whitespace removal rules are based on the XML
        structure and not a string language directives. Despite a template
        being well-formed XML, the output does not have to be well-formed
        XML which makes the Raptor Templating Language flexible enough for
        using in all types of web applications.
    </p>
    <p>
        The Raptor Templating Language aims to be easy to understand by utilizing
        concepts that front-end developers are already familiar with such as
        XML/HTML and JavaScript. While the Raptor Templating Language
        introduces a new grammar on top of XHTML, it is not an entirely new
        language which reduces the learning curve.
    </p>

</c:template>



    